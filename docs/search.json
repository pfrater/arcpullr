[{"path":"/articles/intro_to_arcpullr.html","id":"urls-for-examples","dir":"Articles","previous_headings":"","what":"URL’s for examples","title":"Introduction to arcpullr","text":"","code":"wdnr_base_url <- \"https://dnrmaps.wi.gov/arcgis/rest/services\" streams_layer_url <- \"WT_SWDV/WT_Inland_Water_Resources_WTM_Ext_v2/MapServer/2\" streams_url <- paste(wdnr_base_url, streams_layer_url, sep = \"/\")  # the mke_county polygon is available as an exported object in arcpullr open_water_layer_url <- \"WT_SWDV/WT_Inland_Water_Resources_WTM_Ext_v2/MapServer/3\" hydro_url <- paste(wdnr_base_url, open_water_layer_url, sep = \"/\")  wis_county_layer_url <- \"https://datcpgis.wi.gov/arcgis/rest/services/Base/PolygonsExternal/MapServer/0\""},{"path":[]},{"path":"/articles/intro_to_arcpullr.html","id":"the-get_spatial_layer-function","dir":"Articles","previous_headings":"Feature (i.e. vector) Layers","what":"The get_spatial_layer() function","title":"Introduction to arcpullr","text":"one core functions package, allows users pull Feature Service data ArcGIS REST API. URL specific layer ArcGIS REST API, Wisconsin Dep’t. Natural Resources Musky Streams layer, example. get_spatial_layer() function retrieve data layer, format object class (.e. R package sf: Simple Features R). function also query-able using SQL code ArcGIS’s Query (Feature Service) functionality.","code":"# url <- some url from an ArcGIS REST API layer layer <- get_spatial_layer(url)"},{"path":"/articles/intro_to_arcpullr.html","id":"querying-spatially-via-arcgis-feature-service","dir":"Articles","previous_headings":"Feature (i.e. vector) Layers > The get_spatial_layer() function","what":"Querying Spatially via ArcGIS Feature Service","title":"Introduction to arcpullr","text":"Along SQL, layers ArcGIS REST API may queried spatially. accomplished get_layer_by_* family functions. functions essentially wrapper around get_spatial_layer removes abstraction spatial query syntax used ArcGIS. functions require spatial object class sf passed geometry argument. test can also quickly create simple sf objects using sf_lines(), sf_points(), sf_polygons() test service feature. Spatial queries can done polygons, lines, points…just use respective get_layer_by_* function. See vignette spatial querying detailed examples.","code":"mke_waters <- get_layer_by_poly(url = streams_url, mke_county)"},{"path":"/articles/intro_to_arcpullr.html","id":"querying-via-sql","dir":"Articles","previous_headings":"Feature (i.e. vector) Layers > The get_spatial_layer() function","what":"Querying via SQL","title":"Introduction to arcpullr","text":"query via SQL within function field name query interest must known. example, multiple clauses see ?sql_where function, automates creation clause.","code":"wi_river <- get_spatial_layer(hydro_url, where = \"WATERBODY_ROW_NAME = 'Wisconsin River'\")"},{"path":"/articles/intro_to_arcpullr.html","id":"raster-layers","dir":"Articles","previous_headings":"","what":"Raster Layers","title":"Introduction to arcpullr","text":"arcpullr capable pulling raster layers well (denoted map image layers ArcGIS REST APIs). Utilize get_map_layer get_image_layer functions pull respective layers. See information vignette raster layers","code":""},{"path":"/articles/intro_to_arcpullr.html","id":"plotting-layers","dir":"Articles","previous_headings":"","what":"Plotting Layers","title":"Introduction to arcpullr","text":"Layers retrieved via get_*_layer functions may plotted using appropriate method corresponds object type. quick plotting ’ve also included plot_layer function. function plot layers using ggplot2 default can switched base graphics using plot_pkg argument.","code":""},{"path":"/articles/raster_layers.html","id":"urls-for-examples","dir":"Articles","previous_headings":"","what":"URL’s for examples","title":"Raster Layers","text":"","code":"# WDNR Server image_server <- \"https://dnrmaps.wi.gov/arcgis_image/rest/services/\"  # WI Landcover Type URL landcover_path <- \"DW_Land_Cover/EN_Land_Cover2_Lev2/MapServer\" landcover_url <- paste0(image_server, landcover_path)  # WI Leaf-off Aerial Imagery URL wi_leaf_off_path <- \"DW_Imagery/EN_Image_Basemap_Latest_Leaf_Off/ImageServer\" wi_aerial_imagery_url <- paste0(image_server, wi_leaf_off_path)  # the wis_poly polygon is available as an exported object in arcpullr"},{"path":"/articles/raster_layers.html","id":"map-layers","dir":"Articles","previous_headings":"","what":"Map Layers","title":"Raster Layers","text":"get_map_layer function takes URL sf object. Since query layer type ArcGIS REST Service requires bounding box sf object can used (.e. POLYGON, POINT, LINE, etc.) bounding box created using extent shape. example pulls Wisconsin landcover types plots map.","code":"wi_landcover <- get_map_layer(landcover_url, wis_poly) plot_layer(wi_landcover)"},{"path":"/articles/raster_layers.html","id":"image-layers","dir":"Articles","previous_headings":"","what":"Image Layers","title":"Raster Layers","text":"get_image_layer function works get_map_layer except queries Image layer. easiest way distinguish Map layer Image layer checking URL. images end “ImageServer” whereas maps end “MapServer”. Another way check look “Supported Operations” bottom actual web page ArcGIS REST Service. say either “Export Image” “Export Map”. example pulls Wisconsin Leaf-Aerial Imagery dataset Wisconsin Department Natural Resources.","code":""},{"path":"/articles/spatial_queries.html","id":"urls-for-examples","dir":"Articles","previous_headings":"","what":"URL’s for examples","title":"Spatial Queries","text":"","code":"#WDNR Server server <- \"https://dnrmaps.wi.gov/arcgis/rest/services/\" server2 <- \"https://dnrmaps.wi.gov/arcgis2/rest/services/\"  #River URL layer <- \"TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2\" river_url <- paste0(server2,layer)  #Country URL  layer <- \"DW_Map_Dynamic/EN_Basic_Basemap_WTM_Ext_Dynamic_L16/MapServer/3\" county_url <- paste0(server,layer)  #Trout URL  layer <- \"FM_Trout/FM_TROUT_HAB_SITES_WTM_Ext/MapServer/0\" trout_url <- paste0(server,layer)  #Watershed URL layer <- \"WT_SWDV/WT_Federal_Hydrologic_Units_WTM_Ext/MapServer/0\" watershed_url <- paste0(server,layer)  #get layers for queries mke_river <- get_spatial_layer(   river_url,    where = \"RIVER_SYS_NAME = 'Milwaukee River'\" )  trout_hab_project_pts <- get_spatial_layer(   trout_url,   where = \"WATERBODYNAMECOMBINED = 'Sugar Creek' and FISCALYEAR = 2017\" )  trout_hab_project_pt <- trout_hab_project_pts[1, ]  # get watershed layer for Cook Creek cook_creek_ws <- get_spatial_layer(   watershed_url,   where = \"HUC12_NAME = 'Cook Creek'\" )"},{"path":"/articles/spatial_queries.html","id":"get_layer_by_line","dir":"Articles","previous_headings":"","what":"get_layer_by_line","title":"Spatial Queries","text":"get_layer_by_line function uses LINSESTRING MULTILINESTRING sf object query ArcGIS REST API. example uses MULTILINESTRING sf object Milwaukee River query Wisconsin County polygon layer.","code":"mke_river_counties <- get_layer_by_line(url = county_url, geometry = mke_river) plot_layer(mke_river, outline_poly = mke_river_counties)"},{"path":"/articles/spatial_queries.html","id":"get_layer_by_point","dir":"Articles","previous_headings":"","what":"get_layer_by_point","title":"Spatial Queries","text":"get_layer_by_line function uses POINT sf object query ArcGIS REST API. example shows can used return rivers intersect trout habitat project Sugar Creek southeast Wisconsin.  get_layer_by_point can also handle multipoint objects. example shows stream single point, now multiple restoration points.","code":"trout_stream <- get_layer_by_point(url = river_url, geometry = trout_hab_project_pt) plot_layer(trout_stream) +   ggplot2::geom_sf(data = trout_hab_project_pt, color = \"red\", size = 2) restored_streams <- get_layer_by_point(url = river_url, geometry = trout_hab_project_pts) plot_layer(restored_streams) +    ggplot2::geom_sf(data = trout_hab_project_pts, color = \"blue\")"},{"path":"/articles/spatial_queries.html","id":"get_layer_by_polygon","dir":"Articles","previous_headings":"","what":"get_layer_by_polygon","title":"Spatial Queries","text":"get_layer_by_line function uses POLYGON sf object query ArcGIS REST API. examples shows can used find rivers within particular watershed.","code":"cook_creek_streams <- `get_layer_by_poly(river_url, cook_creek_ws) plot_layer(cook_creek_streams, cook_creek_ws)"},{"path":"/articles/spatial_queries.html","id":"get_layer_by_envelope","dir":"Articles","previous_headings":"","what":"get_layer_by_envelope","title":"Spatial Queries","text":"get_layer_by_envelope function accepts sf object query ArcGIS REST API using sf objects bounding box. example shows used query WI’s Rivers ArcGIS REST API using sf POLYGON object watershed small stream. Note results compare object queried using get_layer_by_poly function.","code":"cook_creek_env <- get_layer_by_envelope(river_url, cook_creek_ws)  # example of the envelope to visualize how it spatially queries example_env <- sf::st_as_sfc(sf::st_bbox(cook_creek_ws))  plot_layer(cook_creek_env, cook_creek_ws) +    ggplot2::geom_sf(data = example_env, fill = NA)"},{"path":"/articles/spatial_queries.html","id":"combining-spatial-and-sql-queries","dir":"Articles","previous_headings":"","what":"Combining Spatial and SQL Queries","title":"Spatial Queries","text":"Spatial queries can combined SQL statements refine queries.","code":""},{"path":"/articles/spatial_queries.html","id":"spatial-relationship","dir":"Articles","previous_headings":"","what":"Spatial Relationship","title":"Spatial Queries","text":"sp_rel argument can used define spatial relationship two feature classes involved within spatial query. default spatial relationships get_layer_by_poly function “contains”. functions default “intersects”.  Using “crosses” returns different records compared example (.e. returns records cross polygon border).","code":"example_poly <- sf_polygon(   c(-90.62, 43.76),   c(-90.62, 43.77),   c(-90.61, 43.77),   c(-90.61, 43.76),   c(-90.62, 43.76) ) poly_streams_contains <- get_layer_by_poly(river_url, example_poly) plot_layer(poly_streams_contains, outline_poly = example_poly) poly_streams_crosses <- get_layer_by_poly(river_url, example_poly, sp_rel = \"crosses\") plot_layer(poly_streams_crosses, outline_poly = example_poly)"},{"path":"/articles/spatial_queries.html","id":"lookup-tables","dir":"Articles","previous_headings":"Spatial Relationship","what":"Lookup Tables","title":"Spatial Queries","text":"sp_rel_lookup data.frame explains various types spatial relationships available ArcGIS REST APIs. sp_rel_valid data.frame shows spatial relationships valid different geometry types queried used spatial queries.","code":""},{"path":"/articles/spatial_queries.html","id":"the-valid_sp_rel-function","dir":"Articles","previous_headings":"Spatial Relationship","what":"The valid_sp_rel Function","title":"Spatial Queries","text":"valid_sp_rel function can used see spatial relation types applicable different geometries.","code":"valid_sp_rel(\"line\",\"line\") #> [1] \"esriSpatialRelCrosses\"            \"esriSpatialRelEnvelopeIntersects\" #> [3] \"esriSpatialRelIndexIntersects\"    \"esriSpatialRelIntersects\"         #> [5] \"esriSpatialRelRelation\""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Frater. Author, maintainer. Zac Driscoll. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Frater P, Driscoll Z (2025). arcpullr: Pull Data 'ArcGIS REST' API. R package version 0.3.0.","code":"@Manual{,   title = {arcpullr: Pull Data from an 'ArcGIS REST' API},   author = {Paul Frater and Zac Driscoll},   year = {2025},   note = {R package version 0.3.0}, }"},{"path":"/index.html","id":"arcpullr","dir":"","previous_headings":"","what":"Pull Data from an ArcGIS REST API","title":"Pull Data from an ArcGIS REST API","text":"arcpullr package provides functions pulling spatial data ArcGIS REST API formatting layers either sf Raster* objects (depending layer requested). functions provide basis retrieving spatial data housed ArcGIS REST API using either spatial relational queries. output querying functions intended work seamlessly spatial packages already implemented established R. package neither produced maintained Esri.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Pull Data from an ArcGIS REST API","text":"","code":"#Install directly from CRAN: install.packages(\"arcpullr\")  # Or the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"pfrater/arcpullr\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Pull Data from an ArcGIS REST API","text":"example demonstrates use arcpullr query Wisconsin Department Natural Resources County ArcGIS Rest API","code":"library(arcpullr) #> Loading required package: sf #> Linking to GEOS 3.9.1, GDAL 3.2.1, PROJ 7.2.1; sf_use_s2() is TRUE wdnr_server <-\"https://dnrmaps.wi.gov/arcgis/rest/services/\" counties <- \"DW_Map_Dynamic/EN_Basic_Basemap_WTM_Ext_Dynamic_L16/MapServer/3\" wi_counties_url <- paste(wdnr_server,counties,sep =\"/\") wi_counties <- get_spatial_layer(wi_counties_url)  ggplot2::ggplot() +   ggplot2::geom_sf(data = wi_counties)"},{"path":"/reference/arcpullr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"arcpullr — arcpullr-package","title":"arcpullr — arcpullr-package","text":"package pulling spatial data ArcGIS REST API","code":""},{"path":"/reference/arcpullr-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"arcpullr — arcpullr-package","text":"role arcpullr package simple...pull spatial data ArcGIS REST API. APIs housed various different agencies, organizations, entitites, etc., allow consistent format storing retrieving spatial data","code":""},{"path":"/reference/arcpullr-package.html","id":"get-spatial-layer","dir":"Reference","previous_headings":"","what":"get_spatial_layer","title":"arcpullr — arcpullr-package","text":"function makes core package. allows users pull spatial data given URL ArcGIS REST API. many additional query parameters can (probably ) added; however, simplified many functions .","code":""},{"path":"/reference/arcpullr-package.html","id":"get-layer-by-spatial-family-of-functions","dir":"Reference","previous_headings":"","what":"get_layer_by_spatial family of functions","title":"arcpullr — arcpullr-package","text":"functions allow pull layers using spatial query. abstract syntax wrapped functions, pass functions sf object spatial area, line, point want query . functions include get_layer_by_poly, get_layer_by_point, get_layer_by_line, get_layer_by_multipoint, get_layer_by_envelope. fairly obvious type spatial layer function takes exception get_layer_by_envelope except particularly useful single point.","code":""},{"path":"/reference/arcpullr-package.html","id":"get-image-layer","dir":"Reference","previous_headings":"","what":"get_image_layer","title":"arcpullr — arcpullr-package","text":"one core functions package. retrieves image service layers ArcGIS REST API designated URL","code":""},{"path":"/reference/arcpullr-package.html","id":"get-map-layer","dir":"Reference","previous_headings":"","what":"get_map_layer","title":"arcpullr — arcpullr-package","text":"one core functions package. retrieves map service layers ArcGIS REST API designated URL","code":""},{"path":"/reference/arcpullr-package.html","id":"helper-functions","dir":"Reference","previous_headings":"","what":"Helper functions","title":"arcpullr — arcpullr-package","text":"utility functions help along way. first plot_layer, useful way plot spatial layer tried pull just make sure works. want fancier maps better served ggplot2 tmaps, though. helpers include sf_objects functions, allow easily create sf points, lines, polygons coordinates. Lastly, sql_where function help aid building complex SQL clauses used query argument retrieval functions .","code":""},{"path":"/reference/arcpullr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"arcpullr — arcpullr-package","text":"Maintainer: Paul Frater paul.frater@wisconsin.gov (ORCID) Authors: Zac Driscoll zdriscoll@mmsd.com (ORCID)","code":""},{"path":"/reference/example_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"Various URLs used in examples — example_urls","title":"Various URLs used in examples — example_urls","text":"URLs used examples throughout package","code":""},{"path":"/reference/example_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Various URLs used in examples — example_urls","text":"","code":"reykjanes_lava_flow_url  wi_hydro_url  wi_landcover_url  wi_leaf_off_url"},{"path":"/reference/example_urls.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Various URLs used in examples — example_urls","text":"Character strings URLs object class character length 1. object class character length 1. object class character length 1.","code":""},{"path":"/reference/format_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert coordinates from an 'sf' object to formatted well-known text — format_coords","title":"Convert coordinates from an 'sf' object to formatted well-known text — format_coords","text":"Use function convert coordinates sf polygon object string well known text. output can passed ArcGIS REST API perform spatial query.","code":""},{"path":"/reference/format_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert coordinates from an 'sf' object to formatted well-known text — format_coords","text":"","code":"format_polygon_coords(sf_obj)  format_line_coords(sf_obj)  format_multipoint_coords(sf_obj)  format_point_coords(sf_obj)  format_envelope_coords(sf_obj)  format_coords(sf_obj, geom_type)"},{"path":"/reference/format_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert coordinates from an 'sf' object to formatted well-known text — format_coords","text":"sf_obj sf object geom_type Either \"points\", \"paths\", \"rings\". Choose wisely","code":""},{"path":"/reference/format_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert coordinates from an 'sf' object to formatted well-known text — format_coords","text":"String well known text","code":""},{"path":"/reference/format_coords.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert coordinates from an 'sf' object to formatted well-known text — format_coords","text":"Spatial queries ArcGIS REST API require specific text inputs formatted way called well-known text (WKT). ArcGIS REST APIs syntax text taken. functions format sf objects correct way able make spatial queries ArcGIS REST API","code":""},{"path":"/reference/format_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert coordinates from an 'sf' object to formatted well-known text — format_coords","text":"","code":"mke_polygon_coords <- format_polygon_coords(mke_county)"},{"path":"/reference/get_geometry_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Geometry Type — get_geometry_type","title":"Get Geometry Type — get_geometry_type","text":"Get Geometry Type","code":""},{"path":"/reference/get_geometry_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Geometry Type — get_geometry_type","text":"","code":"get_geometry_type(url)"},{"path":"/reference/get_geometry_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Geometry Type — get_geometry_type","text":"url character string feature services URL","code":""},{"path":"/reference/get_geometry_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Geometry Type — get_geometry_type","text":"character string layers geometry type","code":""},{"path":"/reference/get_geometry_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Geometry Type — get_geometry_type","text":"","code":"if (FALSE) { # \\dontrun{ get_geometry_type(reykjanes_lava_flow_url) } # }"},{"path":"/reference/get_image_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve an image service layer from an ArcGIS REST API — get_image_layer","title":"Retrieve an image service layer from an ArcGIS REST API — get_image_layer","text":"function retrieves image service layers ArcGIS REST services API returns RasterStack object","code":""},{"path":"/reference/get_image_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve an image service layer from an ArcGIS REST API — get_image_layer","text":"","code":"get_image_layer(   url,   sf_object = NULL,   bbox = NULL,   bbox_crs = NULL,   token = \"\",   clip_raster = TRUE,   format = \"png\",   transparent = TRUE,   ... )"},{"path":"/reference/get_image_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve an image service layer from an ArcGIS REST API — get_image_layer","text":"url character string url layer pull sf_object sf object used bounding box bbox Vector bounding box coordinates bbox_crs CRS bbox (required bbox used) token character string token (needed) clip_raster Logical. raster clipped contain pixels reside sf_object? default, ArcGIS returns overlapping edge pixels. Setting clip_raster TRUE (default) remove using mask raster package format raster format desired. Default \"png\" transparent Logical. Retrieve raster transparent background (TRUE, default) (FALSE) ... Additional arguments pass ArcGIS REST API","code":""},{"path":"/reference/get_image_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve an image service layer from an ArcGIS REST API — get_image_layer","text":"\"SpatRaster\" object","code":""},{"path":"/reference/get_image_layer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve an image service layer from an ArcGIS REST API — get_image_layer","text":"one core functions package. retrieves image service layers ArcGIS REST API designated URL. layers require bounding box query map layer, either taken sf_object argument optionally can passed via bbox argument. Either sf_object bbox optional, one must present. querying parameters sent via POST request URL, issues passing additional parameters via ... first determine fit POST request make adjustments needed. syntax can tricky used .","code":""},{"path":"/reference/get_image_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve an image service layer from an ArcGIS REST API — get_image_layer","text":"","code":"if (FALSE) { # \\dontrun{ wi_leaf_off_layer <- get_image_layer(wi_leaf_off_url, wis_poly) plot_layer(wi_leaf_off_layer, outline_poly = wis_poly) } # }"},{"path":"/reference/get_layers_by_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve ArcGIS REST API spatial layer by spatial query — get_layers_by_spatial","title":"Retrieve ArcGIS REST API spatial layer by spatial query — get_layers_by_spatial","text":"functions wrappers around get_spatial_layer specialized querying spatial layer. make POST request query URL returns data (available) based appropriate spatial feature (geometry) relationship (sp_rel).","code":""},{"path":"/reference/get_layers_by_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve ArcGIS REST API spatial layer by spatial query — get_layers_by_spatial","text":"","code":"get_layer_by_poly(url, geometry, sp_rel = \"contains\", ...)  get_layer_by_line(url, geometry, sp_rel = \"intersects\", ...)  get_layer_by_point(url, geometry, sp_rel = \"intersects\", ...)  get_layer_by_multipoint(url, geometry, sp_rel = \"intersects\", ...)  get_layer_by_envelope(url, geometry, sp_rel = \"intersects\", ...)  get_layer_by_spatial(   url,   geometry,   geom_type,   sp_ref = NULL,   sp_rel = \"intersects\",   ... )"},{"path":"/reference/get_layers_by_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve ArcGIS REST API spatial layer by spatial query — get_layers_by_spatial","text":"url character string url layer pull geometry sf object used spatial query sp_rel Character. type relationship query . Possible options include \"intersects\", \"contains\", \"crosses\" ... Additional arguements pass get_spatial_layer geom_type character geometry type used. param automatically specified get_layer_by_* functions except get_spatial_layer sp_ref spatial reference value","code":""},{"path":"/reference/get_layers_by_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve ArcGIS REST API spatial layer by spatial query — get_layers_by_spatial","text":"object class \"sf\" appropriate layer","code":""},{"path":"/reference/get_layers_by_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve ArcGIS REST API spatial layer by spatial query — get_layers_by_spatial","text":"","code":"if (FALSE) { # \\dontrun{   mke_waters <- get_layer_by_poly(wi_hydro_url, mke_county) } # }"},{"path":"/reference/get_layer_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull the HTML body from a web page — get_layer_html","title":"Pull the HTML body from a web page — get_layer_html","text":"Used internally pull HTML layer's web page call made twice get_geometry_type url provided raster layer.","code":""},{"path":"/reference/get_layer_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull the HTML body from a web page — get_layer_html","text":"","code":"get_layer_html(url)"},{"path":"/reference/get_layer_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull the HTML body from a web page — get_layer_html","text":"url Character. URL web page","code":""},{"path":"/reference/get_layer_html.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull the HTML body from a web page — get_layer_html","text":"character string HTML body","code":""},{"path":"/reference/get_layer_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve metadata for a layer — get_layer_info","title":"Retrieve metadata for a layer — get_layer_info","text":"function retrieves metadata layer.","code":""},{"path":"/reference/get_layer_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve metadata for a layer — get_layer_info","text":"","code":"get_layer_info(url, token = \"\")"},{"path":"/reference/get_layer_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve metadata for a layer — get_layer_info","text":"url character string url layer pull token character string token (needed)","code":""},{"path":"/reference/get_layer_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve metadata for a layer — get_layer_info","text":"list metadata fields","code":""},{"path":"/reference/get_layer_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve metadata for a layer — get_layer_info","text":"","code":"if (FALSE) { # \\dontrun{ # lava flows on Reykjanes (pr. 'rake-yah-ness') peninsula in Iceland lava_flows_info <- get_layer_info(reykjanes_lava_flow_url) } # }"},{"path":"/reference/get_layer_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a legend for a raster layer — get_layer_legend","title":"Returns a legend for a raster layer — get_layer_legend","text":"Raster layers accompanied legends identify colors mean. function retrieves legend values returns data.frame associated RGB color values. likely useful plotting analysis map layers.","code":""},{"path":"/reference/get_layer_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a legend for a raster layer — get_layer_legend","text":"","code":"get_layer_legend(url)"},{"path":"/reference/get_layer_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a legend for a raster layer — get_layer_legend","text":"url URL Map Image Service layer","code":""},{"path":"/reference/get_layer_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a legend for a raster layer — get_layer_legend","text":"data.frame two columns (color, values) number rows equal number values layer","code":""},{"path":"/reference/get_layer_legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns a legend for a raster layer — get_layer_legend","text":"","code":"if (FALSE) { # \\dontrun{ get_layer_legend(wi_landcover_url) } # }"},{"path":"/reference/get_map_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a map service layer from an ArcGIS REST API — get_map_layer","title":"Retrieve a map service layer from an ArcGIS REST API — get_map_layer","text":"function retrieves map service layers ArcGIS REST services API returns RasterLayer object","code":""},{"path":"/reference/get_map_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a map service layer from an ArcGIS REST API — get_map_layer","text":"","code":"get_map_layer(   url,   sf_object = NULL,   bbox = NULL,   bbox_crs = NULL,   token = \"\",   clip_raster = TRUE,   format = \"png\",   transparent = TRUE,   add_legend = TRUE,   ... )"},{"path":"/reference/get_map_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a map service layer from an ArcGIS REST API — get_map_layer","text":"url character string url layer pull sf_object sf object used bounding box bbox Vector bounding box coordinates bbox_crs CRS bbox (required bbox used) token character string token (needed) clip_raster Logical. raster clipped contain pixels reside sf_object? default, ArcGIS returns overlapping edge pixels. Setting clip_raster TRUE (default) remove using mask raster package format raster format desired. Default \"png\" transparent Logical. Retrieve raster transparent background (TRUE, default) (FALSE) add_legend Logical. Pull legend match color values (TRUE, default) (FALSE) ... Additional arguments pass ArcGIS REST API","code":""},{"path":"/reference/get_map_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a map service layer from an ArcGIS REST API — get_map_layer","text":"\"SpatRaster\" object","code":""},{"path":"/reference/get_map_layer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a map service layer from an ArcGIS REST API — get_map_layer","text":"one core functions package. retrieves map service layers ArcGIS REST API designated URL. layers require bounding box query map layer, either taken sf_object argument optionally can passed via bbox argument. Either sf_object bbox optional, one must present. querying parameters sent via POST request URL, issues passing additional parameters via ... first determine fit POST request make adjustments needed. syntax can tricky used .","code":""},{"path":"/reference/get_map_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a map service layer from an ArcGIS REST API — get_map_layer","text":"","code":"if (FALSE) { # \\dontrun{ wi_landcover<- get_map_layer(wi_landcover_url, wis_poly) plot_layer(wi_landcover, outline_poly = wis_poly) } # }"},{"path":"/reference/get_raster_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull a raster layer from a map service or image service layer of an ArcGIS REST API — get_raster_layer","title":"Pull a raster layer from a map service or image service layer of an ArcGIS REST API — get_raster_layer","text":"internal function pull raster layers either map service image service ArcGIS REST API. function engine drives get_map_layer get_image_layer","code":""},{"path":"/reference/get_raster_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull a raster layer from a map service or image service layer of an ArcGIS REST API — get_raster_layer","text":"","code":"get_raster_layer(   url,   sf_object = NULL,   bbox = NULL,   bbox_crs = NULL,   token = \"\",   clip_raster = TRUE,   format = \"png\",   transparent = TRUE,   export_type = \"map\",   add_legend = FALSE,   ... )"},{"path":"/reference/get_raster_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull a raster layer from a map service or image service layer of an ArcGIS REST API — get_raster_layer","text":"url character string url layer pull sf_object sf object used bounding box bbox Vector bounding box coordinates bbox_crs CRS bbox (required bbox used) token character string token (needed) clip_raster Logical. raster clipped contain pixels reside sf_object? default, ArcGIS returns overlapping edge pixels. Setting clip_raster TRUE (default) remove using mask raster package format raster format desired. Default \"png\" transparent Logical. Retrieve raster transparent background (TRUE, default) (FALSE) export_type Character. Either \"map\" \"image\" respective service layer desired add_legend Logical. Pull legend match color values (TRUE, default) (FALSE) ... Additional arguments pass ArcGIS REST API","code":""},{"path":"/reference/get_raster_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull a raster layer from a map service or image service layer of an ArcGIS REST API — get_raster_layer","text":"object type SpatRaster","code":""},{"path":"/reference/get_service_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get elements of a Service or Layer from an ArcGIS REST endpoint — get_service_type","title":"Get elements of a Service or Layer from an ArcGIS REST endpoint — get_service_type","text":"family functions meant pull attributes particular service layer hosted ArcGIS REST API. service ImageServer MapServer, behavior slightly different Feature Layer (see details).","code":""},{"path":"/reference/get_service_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get elements of a Service or Layer from an ArcGIS REST endpoint — get_service_type","text":"","code":"get_service_type(url, ...)"},{"path":"/reference/get_service_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get elements of a Service or Layer from an ArcGIS REST endpoint — get_service_type","text":"url character string valid layer URL ... used internally, html can passed","code":""},{"path":"/reference/get_service_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get elements of a Service or Layer from an ArcGIS REST endpoint — get_service_type","text":"character string defining layer type","code":""},{"path":"/reference/get_service_type.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get elements of a Service or Layer from an ArcGIS REST endpoint — get_service_type","text":"get_service_type return type service layer respective URL (html) passed function. feature layer function return \"feature_layer\", Image Map Server function return \"image\" \"map\", respectively. get_geometry_type return geometry type feature service layers housed ArcGIS REST API server. URL provided points map image layer function return error (.e. feature layers geometry types). get_supported_operations simply return character vector lists supported operations url.","code":""},{"path":"/reference/get_service_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get elements of a Service or Layer from an ArcGIS REST endpoint — get_service_type","text":"","code":"if (FALSE) { # \\dontrun{ get_service_type(reykjanes_lava_flow_url) } # }"},{"path":"/reference/get_sf_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Return CRS value of an sf object — get_sf_crs","title":"Return CRS value of an sf object — get_sf_crs","text":"Return CRS value sf object","code":""},{"path":"/reference/get_sf_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return CRS value of an sf object — get_sf_crs","text":"","code":"get_sf_crs(sf_obj)"},{"path":"/reference/get_sf_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return CRS value of an sf object — get_sf_crs","text":"sf_obj object class sf","code":""},{"path":"/reference/get_sf_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return CRS value of an sf object — get_sf_crs","text":"numeric value referring coordinate reference system","code":""},{"path":"/reference/get_sf_crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return CRS value of an sf object — get_sf_crs","text":"","code":"get_sf_crs(iceland_poly) #> [1] 4326"},{"path":"/reference/get_spatial_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a feature service layer from an ArcGIS REST API — get_spatial_layer","title":"Retrieve a feature service layer from an ArcGIS REST API — get_spatial_layer","text":"function retrieves spatial layers present Feature Service layers ArcGIS REST services API returns sf object","code":""},{"path":"/reference/get_spatial_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a feature service layer from an ArcGIS REST API — get_spatial_layer","text":"","code":"get_spatial_layer(   url,   out_fields = c(\"*\"),   where = \"1=1\",   token = \"\",   sf_type = NULL,   head = FALSE,   ... )"},{"path":"/reference/get_spatial_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a feature service layer from an ArcGIS REST API — get_spatial_layer","text":"url character string url layer pull out_fields character string fields pull layer character string condition. Default 1=1 token character string token (needed) sf_type character string specifying layer geometry convert sf (\"esriGeometryPolygon\", \"esriGeometryPoint\", \"esriGeometryPolyline\"), NULL (default) server take best guess head Logical numeric. Limits number records returned query. TRUE, first 5 records returned. numeric, number records specified head returned ... Additional arguments pass ArcGIS REST POST request (associated internal functions used query )","code":""},{"path":"/reference/get_spatial_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a feature service layer from an ArcGIS REST API — get_spatial_layer","text":"object class \"sf\" appropriate layer","code":""},{"path":"/reference/get_spatial_layer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a feature service layer from an ArcGIS REST API — get_spatial_layer","text":"one core functions package. retrieves spatial layers feature services ArcGIS REST API designated URL. Additional querying features can passed SQL statement (argument) spatial queries well types queries ArcGIS REST API accepts (using ...). However, easier spatial querying see get_layers_by_spatial. querying parameters sent via POST request URL, issues passing additional parameters via ... first determine fit POST request make adjustments needed. syntax can tricky used .","code":""},{"path":"/reference/get_spatial_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a feature service layer from an ArcGIS REST API — get_spatial_layer","text":"","code":"if (FALSE) { # \\dontrun{ # lava flows on Reykjanes (pr. 'rake-yah-ness') peninsula in Iceland lava_flows <- get_spatial_layer(reykjanes_lava_flow_url) plot_layer(lava_flows, outline_poly = reykjanes_poly) plot_layer(lava_flows, outline_poly = iceland_poly) } # }"},{"path":"/reference/get_table_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a table from an ArcGIS REST API — get_table_layer","title":"Retrieve a table from an ArcGIS REST API — get_table_layer","text":"function retrieves tables present ArcGIS REST services API returns data frame.","code":""},{"path":"/reference/get_table_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a table from an ArcGIS REST API — get_table_layer","text":"","code":"get_table_layer(   url,   out_fields = \"*\",   where = \"1=1\",   token = \"\",   head = FALSE,   ... )"},{"path":"/reference/get_table_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a table from an ArcGIS REST API — get_table_layer","text":"url character string url layer pull out_fields character string fields pull layer character string condition. Default 1=1 token character string token (needed) head Logical numeric. Limits number records returned query. TRUE, first 5 records returned. numeric, number records specified head returned ... Additional arguments pass ArcGIS REST POST request (associated internal functions used query )","code":""},{"path":"/reference/get_table_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a table from an ArcGIS REST API — get_table_layer","text":"data frame appropriate layer","code":""},{"path":"/reference/get_table_layer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a table from an ArcGIS REST API — get_table_layer","text":"function retrieves tables ArcGIS REST API designated URL. Additional querying features can passed SQL statement (argument) well types queries ArcGIS REST API accepts (using ...). querying parameters sent via POST request URL, issues passing additional parameters via ... first determine fit POST request make adjustments needed. syntax can tricky used .","code":""},{"path":"/reference/match_legend_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Match colors in SpatRaster coltab to the provided legend values — match_legend_colors","title":"Match colors in SpatRaster coltab to the provided legend values — match_legend_colors","text":"Colors provided legend always correspond exactly colors coltab SpatRaster object. usually pretty close, though, function finds closest colors, maps appropriate colors Raster* object, applies legend.","code":""},{"path":"/reference/match_legend_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match colors in SpatRaster coltab to the provided legend values — match_legend_colors","text":"","code":"match_legend_colors(legend, raster_cols)"},{"path":"/reference/match_legend_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match colors in SpatRaster coltab to the provided legend values — match_legend_colors","text":"legend object class raster_legend returned get_layer_legend raster_cols colortable SpatRaster object. Use first item list","code":""},{"path":"/reference/match_legend_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match colors in SpatRaster coltab to the provided legend values — match_legend_colors","text":"raster_legend object corrected colors match x","code":""},{"path":"/reference/match_legend_colors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Match colors in SpatRaster coltab to the provided legend values — match_legend_colors","text":"Raster colors x mapped legend converting RGB hexadecimal values 3D vector values red, green blue. closest values assigned using 3D Pythagorean theorem compute distance among colors. minimum distance three dimensional space color x gets mapped appropriate color legend.","code":""},{"path":"/reference/match_legend_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match colors in SpatRaster coltab to the provided legend values — match_legend_colors","text":"","code":"if (FALSE) { # \\dontrun{ wi_landcover <- get_map_layer(wi_landcover_url, wis_poly) legend <- get_layer_legend(wi_landcover_url) new_legend <- match_legend_colors(legend, wi_landcover_url) } # }"},{"path":"/reference/match_raster_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Match colors in RasterLayer color space to the provided legend values — match_raster_colors","title":"Match colors in RasterLayer color space to the provided legend values — match_raster_colors","text":"Colors provided legend always correspond exactly colors colortable RasterLayer object. usually pretty close, though, function finds closest colors, maps appropriate colors Raster* object, applies legend.","code":""},{"path":"/reference/match_raster_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match colors in RasterLayer color space to the provided legend values — match_raster_colors","text":"","code":"match_raster_colors(legend, x)"},{"path":"/reference/match_raster_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match colors in RasterLayer color space to the provided legend values — match_raster_colors","text":"legend object class raster_legend returned get_layer_legend x RasterLayer object returned get_map_layer","code":""},{"path":"/reference/match_raster_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match colors in RasterLayer color space to the provided legend values — match_raster_colors","text":"raster_legend object corrected colors match x","code":""},{"path":"/reference/match_raster_colors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Match colors in RasterLayer color space to the provided legend values — match_raster_colors","text":"Raster colors x mapped legend converting RGB hexadecimal values 3D vector values red, green blue. closest values assigned using 3D Pythagorean theorem compute distance among colors. minimum distance three dimensional space color x gets mapped appropriate color legend.","code":""},{"path":"/reference/match_raster_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match colors in RasterLayer color space to the provided legend values — match_raster_colors","text":"","code":"if (FALSE) { wi_landcover <- get_map_layer(wi_landcover_url, wis_poly) legend <- get_layer_legend(wi_landcover_url) new_legend <- match_raster_colors(legend, wi_landcover_url) }"},{"path":"/reference/plot_layer-RasterBrick-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a RasterBrick object — plot_layer,RasterBrick-method","title":"Plot a RasterBrick object — plot_layer,RasterBrick-method","text":"Plot RasterBrick object","code":""},{"path":"/reference/plot_layer-RasterBrick-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a RasterBrick object — plot_layer,RasterBrick-method","text":"","code":"# S4 method for class 'RasterBrick' plot_layer(   x,   outline_poly = NULL,   outline_size = 1.2,   outline_color = \"gray30\",   plot_pkg = \"ggplot\",   ... )"},{"path":"/reference/plot_layer-RasterBrick-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a RasterBrick object — plot_layer,RasterBrick-method","text":"x sf Raster* object returned get_*_layer function outline_poly Optional. sf polygon outline sf_data context outline_size Numeric argument controls width parameter outline_color character vector valid color plot_pkg Character. plotting environment use. Either \"ggplot\" (default) \"base\" ... Additional arguments plot_layer","code":""},{"path":"/reference/plot_layer-RasterBrick-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a RasterBrick object — plot_layer,RasterBrick-method","text":"","code":"if (FALSE) { # \\dontrun{ wi_aerial <- get_map_layer(wi_leaf_off_url, wis_poly) plot_layer(wi_aerial, outline_poly = wis_poly) } # }"},{"path":"/reference/plot_layer-RasterLayer-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a RasterLayer object — plot_layer,RasterLayer-method","title":"Plot a RasterLayer object — plot_layer,RasterLayer-method","text":"Plot RasterLayer object","code":""},{"path":"/reference/plot_layer-RasterLayer-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a RasterLayer object — plot_layer,RasterLayer-method","text":"","code":"# S4 method for class 'RasterLayer' plot_layer(   x,   outline_poly = NULL,   outline_size = 1.2,   outline_color = \"gray30\",   legend = TRUE,   plot_pkg = \"ggplot\",   ... )"},{"path":"/reference/plot_layer-RasterLayer-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a RasterLayer object — plot_layer,RasterLayer-method","text":"x sf Raster* object returned get_*_layer function outline_poly Optional. sf polygon outline sf_data context outline_size Numeric argument controls width parameter outline_color character vector valid color legend Logical. valid plotting RasterLayers retrieved get_map_layer legend also retrieved plot_pkg Character. plotting environment use. Either \"ggplot\" (default) \"base\" ... Additional arguments plot_layer","code":""},{"path":"/reference/plot_layer-RasterLayer-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a RasterLayer object — plot_layer,RasterLayer-method","text":"","code":"if (FALSE) { # \\dontrun{ wi_landcover <- get_map_layer(wi_landcover_url, wis_poly) plot_layer(wi_landcover, outline_poly = wis_poly) } # }"},{"path":"/reference/plot_layer-RasterStack-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a RasterStack object — plot_layer,RasterStack-method","title":"Plot a RasterStack object — plot_layer,RasterStack-method","text":"Plot RasterStack object","code":""},{"path":"/reference/plot_layer-RasterStack-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a RasterStack object — plot_layer,RasterStack-method","text":"","code":"# S4 method for class 'RasterStack' plot_layer(   x,   outline_poly = NULL,   outline_size = 1.2,   outline_color = \"gray30\",   plot_pkg = \"ggplot\",   ... )"},{"path":"/reference/plot_layer-RasterStack-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a RasterStack object — plot_layer,RasterStack-method","text":"x sf Raster* object returned get_*_layer function outline_poly Optional. sf polygon outline sf_data context outline_size Numeric argument controls width parameter outline_color character vector valid color plot_pkg Character. plotting environment use. Either \"ggplot\" (default) \"base\" ... Additional arguments plot_layer","code":""},{"path":"/reference/plot_layer-RasterStack-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a RasterStack object — plot_layer,RasterStack-method","text":"","code":"if (FALSE) { # \\dontrun{ wi_aerial <- get_map_layer(wi_leaf_off_url, wis_poly) plot_layer(wi_aerial, outline_poly = wis_poly) } # }"},{"path":"/reference/plot_layer-sf-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an sf object — plot_layer,sf-method","title":"Plot an sf object — plot_layer,sf-method","text":"Plot sf object","code":""},{"path":"/reference/plot_layer-sf-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an sf object — plot_layer,sf-method","text":"","code":"# S4 method for class 'sf' plot_layer(   x,   outline_poly = NULL,   outline_size = 1.2,   outline_color = \"gray30\",   plot_pkg = \"ggplot\",   ... )"},{"path":"/reference/plot_layer-sf-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an sf object — plot_layer,sf-method","text":"x sf Raster* object returned get_*_layer function outline_poly Optional. sf polygon outline sf_data context outline_size Numeric argument controls width parameter outline_color character vector valid color plot_pkg Character. plotting environment use. Either \"ggplot\" (default) \"base\" ... Additional arguments plot_layer","code":""},{"path":"/reference/plot_layer-sf-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an sf object — plot_layer,sf-method","text":"","code":"if (FALSE) { # \\dontrun{ plot_layer(wis_poly) } # }"},{"path":"/reference/plot_layer-SpatRaster-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a SpatRaster object — plot_layer,SpatRaster-method","title":"Plot a SpatRaster object — plot_layer,SpatRaster-method","text":"Plot SpatRaster object","code":""},{"path":"/reference/plot_layer-SpatRaster-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a SpatRaster object — plot_layer,SpatRaster-method","text":"","code":"# S4 method for class 'SpatRaster' plot_layer(   x,   outline_poly = NULL,   outline_size = 1.2,   outline_color = \"gray30\",   plot_pkg = \"ggplot\",   ... )"},{"path":"/reference/plot_layer-SpatRaster-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a SpatRaster object — plot_layer,SpatRaster-method","text":"x sf Raster* object returned get_*_layer function outline_poly Optional. sf polygon outline sf_data context outline_size Numeric argument controls width parameter outline_color character vector valid color plot_pkg Character. plotting environment use. Either \"ggplot\" (default) \"base\" ... Additional arguments plot_layer","code":""},{"path":"/reference/plot_layer-SpatRaster-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a SpatRaster object — plot_layer,SpatRaster-method","text":"","code":"if (FALSE) { # \\dontrun{ wi_aerial <- get_map_layer(wi_leaf_off_url, wis_poly) plot_layer(wi_aerial, outline_poly = wis_poly) } # }"},{"path":"/reference/plot_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a spatial layer — plot_layer","title":"Plot a spatial layer — plot_layer","text":"function plots spatial layer returned get_spatial_layer.","code":""},{"path":"/reference/plot_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a spatial layer — plot_layer","text":"","code":"plot_layer(x, ...)  plot_layer.sf(   x,   outline_poly = NULL,   outline_size = 1.2,   outline_color = \"gray30\",   plot_pkg = \"ggplot\",   ... )"},{"path":"/reference/plot_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a spatial layer — plot_layer","text":"x sf Raster* object returned get_*_layer function ... Additional arguments plot_layer outline_poly Optional. sf polygon outline sf_data context outline_size Numeric argument controls width parameter outline_color character vector valid color plot_pkg Character. plotting environment use. Either \"ggplot\" (default) \"base\"","code":""},{"path":"/reference/plot_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a spatial layer — plot_layer","text":"Either ggplot object, simply plots x plot_pkg = \"base\"","code":""},{"path":"/reference/plot_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a spatial layer — plot_layer","text":"","code":"if (FALSE) { # \\dontrun{ plot_layer(iceland_poly) plot_layer(portage_county, outline_poly = wis_poly) } # }"},{"path":"/reference/raster_colors-RasterBrick-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert RasterBrick into data.frame of colors that can be used for plotting — raster_colors,RasterBrick-method","title":"Convert RasterBrick into data.frame of colors that can be used for plotting — raster_colors,RasterBrick-method","text":"function used internally plot_layer convert RasterBrick object data.frame colors pixel can used plotting ggplot2. Note function assumes first three bands RasterBrick objects RGB values additional bands ignored.","code":""},{"path":"/reference/raster_colors-RasterBrick-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert RasterBrick into data.frame of colors that can be used for plotting — raster_colors,RasterBrick-method","text":"","code":"# S4 method for class 'RasterBrick' raster_colors(x)"},{"path":"/reference/raster_colors-RasterBrick-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert RasterBrick into data.frame of colors that can be used for plotting — raster_colors,RasterBrick-method","text":"x RasterBrick object","code":""},{"path":"/reference/raster_colors-RasterBrick-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert RasterBrick into data.frame of colors that can be used for plotting — raster_colors,RasterBrick-method","text":"data.frame 3 columns length(raster_object) rows","code":""},{"path":"/reference/raster_colors-RasterBrick-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert RasterBrick into data.frame of colors that can be used for plotting — raster_colors,RasterBrick-method","text":"","code":"if (FALSE) { # \\dontrun{ wi_leaf_off_layer <- get_image_layer(wi_leaf_off_url, wis_poly) wi_leaf_off_data <- raster_colors(wi_leaf_off_layer) } # }"},{"path":"/reference/raster_colors-RasterLayer-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert RasterLayer into data.frame of colors that can be used for plotting — raster_colors,RasterLayer-method","title":"Convert RasterLayer into data.frame of colors that can be used for plotting — raster_colors,RasterLayer-method","text":"function used internally plot_layer convert RasterLayer object data.frame colors pixel can used plotting ggplot2","code":""},{"path":"/reference/raster_colors-RasterLayer-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert RasterLayer into data.frame of colors that can be used for plotting — raster_colors,RasterLayer-method","text":"","code":"# S4 method for class 'RasterLayer' raster_colors(x)"},{"path":"/reference/raster_colors-RasterLayer-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert RasterLayer into data.frame of colors that can be used for plotting — raster_colors,RasterLayer-method","text":"x RasterLayer object","code":""},{"path":"/reference/raster_colors-RasterLayer-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert RasterLayer into data.frame of colors that can be used for plotting — raster_colors,RasterLayer-method","text":"data.frame 3 columns length(raster_object) rows","code":""},{"path":"/reference/raster_colors-RasterLayer-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert RasterLayer into data.frame of colors that can be used for plotting — raster_colors,RasterLayer-method","text":"","code":"if (FALSE) { # \\dontrun{ wi_landcover <- get_map_layer(wi_landcover_url, wis_poly) wi_landcover_data <- raster_colors(wi_landcover) } # }"},{"path":"/reference/raster_colors-RasterStack-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert RasterStack into data.frame of colors that can be used for plotting — raster_colors,RasterStack-method","title":"Convert RasterStack into data.frame of colors that can be used for plotting — raster_colors,RasterStack-method","text":"function used internally plot_layer convert RasterStack object data.frame colors pixel can used plotting ggplot2. Note function assumes first three bands RasterStack objects RGB values additional bands ignored.","code":""},{"path":"/reference/raster_colors-RasterStack-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert RasterStack into data.frame of colors that can be used for plotting — raster_colors,RasterStack-method","text":"","code":"# S4 method for class 'RasterStack' raster_colors(x)"},{"path":"/reference/raster_colors-RasterStack-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert RasterStack into data.frame of colors that can be used for plotting — raster_colors,RasterStack-method","text":"x RasterStack object","code":""},{"path":"/reference/raster_colors-RasterStack-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert RasterStack into data.frame of colors that can be used for plotting — raster_colors,RasterStack-method","text":"data.frame 3 columns length(raster_object) rows","code":""},{"path":"/reference/raster_colors-RasterStack-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert RasterStack into data.frame of colors that can be used for plotting — raster_colors,RasterStack-method","text":"","code":"if (FALSE) { # \\dontrun{ wi_leaf_off_layer <- get_image_layer(wi_leaf_off_url, wis_poly) wi_leaf_off_data <- raster_colors(wi_leaf_off_layer) } # }"},{"path":"/reference/raster_colors-SpatRaster-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SpatRaster into data.frame of colors that can be used for plotting — raster_colors,SpatRaster-method","title":"Convert SpatRaster into data.frame of colors that can be used for plotting — raster_colors,SpatRaster-method","text":"function used internally plot_layer convert SpatRaster object data.frame colors pixel can used plotting ggplot2. Note function assumes SpatRaster objects use RGB values.","code":""},{"path":"/reference/raster_colors-SpatRaster-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SpatRaster into data.frame of colors that can be used for plotting — raster_colors,SpatRaster-method","text":"","code":"# S4 method for class 'SpatRaster' raster_colors(x)"},{"path":"/reference/raster_colors-SpatRaster-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SpatRaster into data.frame of colors that can be used for plotting — raster_colors,SpatRaster-method","text":"x SpatRaster object","code":""},{"path":"/reference/raster_colors-SpatRaster-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert SpatRaster into data.frame of colors that can be used for plotting — raster_colors,SpatRaster-method","text":"data.frame 3 columns length(raster_object) rows","code":""},{"path":"/reference/raster_colors-SpatRaster-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert SpatRaster into data.frame of colors that can be used for plotting — raster_colors,SpatRaster-method","text":"","code":"if (FALSE) { # \\dontrun{ wi_leaf_off_layer <- get_image_layer(wi_leaf_off_url, wis_poly) wi_leaf_off_data <- raster_colors(wi_leaf_off_layer) } # }"},{"path":"/reference/raster_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert RasterLayer into data.frame of colors for each pixel that can be used for plotting — raster_colors","title":"Convert RasterLayer into data.frame of colors for each pixel that can be used for plotting — raster_colors","text":"function used internally plot_layer convert Raster* object data.frame colors pixel can used plotting ggplot2","code":""},{"path":"/reference/raster_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert RasterLayer into data.frame of colors for each pixel that can be used for plotting — raster_colors","text":"","code":"raster_colors(x)"},{"path":"/reference/raster_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert RasterLayer into data.frame of colors for each pixel that can be used for plotting — raster_colors","text":"x Raster* object","code":""},{"path":"/reference/raster_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert RasterLayer into data.frame of colors for each pixel that can be used for plotting — raster_colors","text":"data.frame 3 columns length(raster_object) rows. Two columns x-y coordinates pixel, one value color can used plotting","code":""},{"path":"/reference/raster_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert RasterLayer into data.frame of colors for each pixel that can be used for plotting — raster_colors","text":"","code":"if (FALSE) { # \\dontrun{ wi_landcover <- get_map_layer(wi_landcover_url, wis_poly) wi_landcover_data <- raster_colors(wi_landcover) head(wi_landcover_data) } # }"},{"path":"/reference/sf_example_polys.html","id":null,"dir":"Reference","previous_headings":"","what":"Various example sf polygons — sf_example_polys","title":"Various example sf polygons — sf_example_polys","text":"sf polygons used examples throughout package","code":""},{"path":"/reference/sf_example_polys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Various example sf polygons — sf_example_polys","text":"","code":"iceland_poly  mke_county  portage_county  reykjanes_poly  wis_counties  wis_poly  cook_creek_ws  cook_creek_streams  cook_creek_env  mke_river  poly_streams_contains  poly_streams_crosses  sugar_creek  sugar_creek_env  trout_hab_project_pt  trout_hab_project_pts  example_poly  trout_hab_project_pts"},{"path":"/reference/sf_example_polys.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Various example sf polygons — sf_example_polys","text":"object class sf data.frame: object class sf (inherits data.frame) 1 rows 3 columns. object class sf (inherits data.frame) 1 rows 3 columns. object class sf (inherits data.frame) 1 rows 2 columns. object class sf (inherits data.frame) 72 rows 3 columns. object class sf (inherits data.frame) 1 rows 2 columns. object class sf (inherits data.frame) 1 rows 7 columns. object class sf (inherits tbl_df, tbl, data.frame) 5 rows 3 columns. object class sf (inherits tbl_df, tbl, data.frame) 10 rows 3 columns. object class sf (inherits tbl_df, tbl, data.frame) 5 rows 5 columns. object class sf (inherits data.frame) 1 rows 28 columns. object class sf (inherits data.frame) 4 rows 28 columns. object class sf (inherits data.frame) 7 rows 28 columns. object class sf (inherits data.frame) 15 rows 28 columns. object class sf (inherits data.frame) 1 rows 11 columns. object class sf (inherits data.frame) 4 rows 11 columns. object class sf (inherits data.frame) 1 rows 1 columns. object class sf (inherits data.frame) 4 rows 11 columns.","code":""},{"path":"/reference/sf_example_polys.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Various example sf polygons — sf_example_polys","text":"ggplot2's map_data Wisconsin DNR ArcGIS REST API","code":""},{"path":"/reference/sf_example_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Various example raster objects — sf_example_raster","title":"Various example raster objects — sf_example_raster","text":"raster objects used examples throughout package","code":""},{"path":"/reference/sf_example_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Various example raster objects — sf_example_raster","text":"","code":"wi_landcover  wi_aerial_imagery"},{"path":"/reference/sf_example_raster.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Various example raster objects — sf_example_raster","text":"object class RasterLayer dimension 400 x 400 x 1. object class RasterBrick dimension 200 x 200 x 3.","code":""},{"path":"/reference/sf_example_raster.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Various example raster objects — sf_example_raster","text":"Wisconsin DNR ArcGIS Image Server","code":""},{"path":"/reference/sf_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Create sf objects from coordinates — sf_objects","title":"Create sf objects from coordinates — sf_objects","text":"simple wrapper functions creating sf objects points","code":""},{"path":"/reference/sf_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create sf objects from coordinates — sf_objects","text":"","code":"sf_line(..., crs = 4326)  sf_point(..., crs = 4326)  sf_points(..., crs = 4326)  sf_polygon(..., crs = 4326)  sf_box(xmin, ymin, xmax, ymax, crs = 4326)"},{"path":"/reference/sf_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create sf objects from coordinates — sf_objects","text":"... coordinates object crs coordinate reference system. Defaults 4326 xmin, xmax, ymin, ymax Corners sf_box","code":""},{"path":"/reference/sf_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create sf objects from coordinates — sf_objects","text":"sf object appropriate type","code":""},{"path":"/reference/sf_objects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create sf objects from coordinates — sf_objects","text":"","code":"pt_a <- c(-90, 45) pt_b <- c(-89, 44) pt <- sf_points(pt_a) line <- sf_line(pt_a, pt_b)"},{"path":"/reference/sp_rel_lookups.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial relationship descriptor and lookup tables — sp_rel_lookups","title":"Spatial relationship descriptor and lookup tables — sp_rel_lookups","text":"data.frames used lookup explain spatial relation types go different spatial queries.","code":""},{"path":"/reference/sp_rel_lookups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial relationship descriptor and lookup tables — sp_rel_lookups","text":"","code":"sp_rel_valid  sp_rel_lookup"},{"path":"/reference/sp_rel_lookups.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial relationship descriptor and lookup tables — sp_rel_lookups","text":"sp_rel_valid data.frame 105 rows 3 variables follows: feature_class feature class queried query_feature_class feature class used spatial query sp_rel spatial relationships valid feature class     query_feature_class combination sp_rel_lookup data.frame 9 rows 2 variables follows: sp_rel spatial relationship described description description sp_rel","code":""},{"path":"/reference/sp_rel_lookups.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial relationship descriptor and lookup tables — sp_rel_lookups","text":"sp_rel_valid–Independent tests done specifically arcpullr sp_rel_lookup – https://help.arcgis.com/en/webapi/wpf/apiref/ESRI.ArcGIS.Client~ESRI.ArcGIS.Client.Tasks.SpatialRelationship.html","code":""},{"path":"/reference/sp_rel_lookups.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial relationship descriptor and lookup tables — sp_rel_lookups","text":"sp_rel_lookup explains various different types spatial relationships available ArcGIS REST APIs. sp_rel_valid shows spatial relationships valid different geometry types queried used spatial queries","code":""},{"path":"/reference/sp_rel_xref.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup function for shorthand versions of spatial relation text strings — sp_rel_xref","title":"Lookup function for shorthand versions of spatial relation text strings — sp_rel_xref","text":"typing \"esriSpatialRelIntersects\" 4 5 functions, get pretty sick typing . function serves allow shorthand strings passed sp_rel arguments get_layers_by_spatial family functions. example, can pass  \"intersects\" function return \"esriSpatialRelIntersects\"","code":""},{"path":"/reference/sp_rel_xref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup function for shorthand versions of spatial relation text strings — sp_rel_xref","text":"","code":"sp_rel_xref(x)"},{"path":"/reference/sp_rel_xref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup function for shorthand versions of spatial relation text strings — sp_rel_xref","text":"x character string. One \"contains\", \"crosses\", \"envelopeintersects\", \"indexintersects\", \"intersects\", \"overlaps\", \"relation\", \"touches\", \"within\"","code":""},{"path":"/reference/sp_rel_xref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup function for shorthand versions of spatial relation text strings — sp_rel_xref","text":"appropriately named ESRI version x. example, x value \"intersects\" returns \"esriSpatialRelIntersects\"","code":""},{"path":"/reference/sp_rel_xref.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lookup function for shorthand versions of spatial relation text strings — sp_rel_xref","text":"","code":"sp_rel_xref(\"intersects\") #> [1] \"esriSpatialRelIntersects\""},{"path":"/reference/sql_where.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a SQL where clause from arguments — sql_where","title":"Format a SQL where clause from arguments — sql_where","text":"function create statement compatible get_spatial_layer). statement can passed argument function.","code":""},{"path":"/reference/sql_where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a SQL where clause from arguments — sql_where","text":"","code":"sql_where(..., rel_op = \"=\")"},{"path":"/reference/sql_where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a SQL where clause from arguments — sql_where","text":"... Named objects queried rel_op Character. relational operator SQL clause (.e. \"=\", \"\", \"\", etc.). single rel_op provide multiple ... parameters recycled length(...) times.","code":""},{"path":"/reference/sql_where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a SQL where clause from arguments — sql_where","text":"character string can passed argument get_spatial_layer","code":""},{"path":"/reference/sql_where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a SQL where clause from arguments — sql_where","text":"","code":"if (FALSE) { # \\dontrun{ wbics <- sql_where(WATERBODY_WBIC = c(805400, 804600), rel_op = \"IN\") lakes <- get_spatial_layer(wi_hydro_url, where = wbics) plot_layer(lakes) } # }"},{"path":"/reference/valid_sp_rel.html","id":null,"dir":"Reference","previous_headings":"","what":"Check to see which spatial relation types are applicable to the feature classes being queried and the sf objects use do to a spatial query — valid_sp_rel","title":"Check to see which spatial relation types are applicable to the feature classes being queried and the sf objects use do to a spatial query — valid_sp_rel","text":"Check see spatial relation types applicable feature classes queried sf objects use spatial query","code":""},{"path":"/reference/valid_sp_rel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check to see which spatial relation types are applicable to the feature classes being queried and the sf objects use do to a spatial query — valid_sp_rel","text":"","code":"valid_sp_rel(fc1, fc2, pull = TRUE)"},{"path":"/reference/valid_sp_rel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check to see which spatial relation types are applicable to the feature classes being queried and the sf objects use do to a spatial query — valid_sp_rel","text":"fc1 Character. feature class type queried. Available options \"point\", \"multipoint\", \"line\", \"area\". fc2 Character. geometry type sf object used spatial query. Available options \"point\", \"multipoint\", \"line\", \"area\". pull Logical. Pull available options (TRUE) print columns sp_rel_valid data.frame appropriate fc1 fc2","code":""},{"path":"/reference/valid_sp_rel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check to see which spatial relation types are applicable to the feature classes being queried and the sf objects use do to a spatial query — valid_sp_rel","text":"Either vector filtered data.frame showing appropriate sp_rels given feature classes","code":""},{"path":"/reference/valid_sp_rel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check to see which spatial relation types are applicable to the feature classes being queried and the sf objects use do to a spatial query — valid_sp_rel","text":"","code":"valid_sp_rel(\"line\", \"line\") #> [1] \"esriSpatialRelCrosses\"            \"esriSpatialRelEnvelopeIntersects\" #> [3] \"esriSpatialRelIndexIntersects\"    \"esriSpatialRelIntersects\"         #> [5] \"esriSpatialRelRelation\""}]
